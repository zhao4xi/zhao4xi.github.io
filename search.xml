<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>https和http的区别与比较</title>
      <link href="/2019/09/15/https%E5%92%8Chttp%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E6%AF%94%E8%BE%83/"/>
      <url>/2019/09/15/https%E5%92%8Chttp%E7%9A%84%E5%8C%BA%E5%88%AB%E4%B8%8E%E6%AF%94%E8%BE%83/</url>
      
        <content type="html"><![CDATA[<h2 id="http"><a href="#http" class="headerlink" title="http"></a>http</h2><p>是一个基于tcp/ip的应用层的的请求/响应式协议, 全称超文本传输协议.<br>特点: </p><ol><li>简单快速灵活, 常用方式 Post Get Put Delete , 支持多种传输数据类型</li><li>无状态, 多次请求没有状态保持</li><li>无连接, 每次处理一个请求</li><li>端口 80<br>不加密的, 任何内容都可能被伪装或者篡改</li></ol><h2 id="https"><a href="#https" class="headerlink" title="https"></a>https</h2><p>https = http + ssl加密 + 认证 + 完整性保护<br>https就是将http与tcp通信中层添加了一个ssl/tsl加密变成 http-&gt;ssl/tsl-&gt;tcp</p><p>特点:</p><ol><li>继承了http的所有特点</li><li>接口层使用了http和tcp直接新增了ssl/tsl协议(tsl 是 ssl 标准化后的名字)</li><li>因为ssl/tsl (引入了 证书/私钥/公钥)加密会耗费服务器资源, 所以默认提供http.</li><li>端口443<br>加密, 相对http较安全</li></ol><h2 id="SSL-TSL-传输层安全协议"><a href="#SSL-TSL-传输层安全协议" class="headerlink" title="SSL(TSL 传输层安全协议)"></a>SSL(TSL 传输层安全协议)</h2><p>安全套接层 基于 应用层和TCP层协议之间, 为数据通信提供安全组支持.<br>主要工作流程:</p><ol><li>客户端想服务器索要公钥<ol><li>判定公钥的证书是否由受信任的CA机构签发,是否有效等, 不是提示警告</li></ol></li><li>使用公钥加密一个随机值(私钥)发送给服务端</li><li>服务端使用私钥解密保存这个随机值, 双方基于这个随机值进行对称加密通信</li><li>服务器端使用随机值加密返回数据</li><li>客户端使用随机值解密<br>简化过程就是:</li><li>客户端向服务器端索要并验证公钥</li><li>双方协商生成”回话秘钥”</li><li>双方采用”回话秘钥”进行加密通信</li></ol><h2 id="总结区别"><a href="#总结区别" class="headerlink" title="总结区别"></a>总结区别</h2><ol><li>http 连接简单, 无状态, 明文传输; https 由SSL+http构建加密传输+ 身份认证, 比较安全, 但由于加密的缘故, 所以相对耗费资源.</li><li>http 和 https 连接方式不一致, http默认使用80端口, https使用443端口.</li><li>https 协议确认到ca证书, 需要一定费用.</li></ol>]]></content>
      
      
      <categories>
          
          <category> 协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag> 

        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/09/13/hello-world/"/>
      <url>/2019/09/13/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>blog test</title>
      <link href="/2019/09/13/blog-test/"/>
      <url>/2019/09/13/blog-test/</url>
      
        <content type="html"><![CDATA[<h2 id="Test-Hello-World"><a href="#Test-Hello-World" class="headerlink" title="Test Hello World"></a>Test Hello World</h2><pre><code class="csharp">    using HelloWorldEx    {        static void Main(string[] args)        {            System.Console.Write(&quot;Hello World&quot;);        }    }</code></pre>]]></content>
      
      
      <categories>
          
          <category> Test </category>
          
      </categories>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
